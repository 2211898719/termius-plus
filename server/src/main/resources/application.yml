app:
    secret: ${APP_SECRET:java_skeleton_dev_secret}
cache:
    namespace: skeleton
    ttl: 7200
current:
    ip: ${CURRENT_IP:0.0.0.0}
file:
    dir: ${FILE_DIR:/var/www/data}
queue:
    mock: true
    rocketmq:
        delay-consumer-group: skeleton_delay_consumer
        delay-topic: skeleton_delay
        normal-consumer-group: skeleton_normal_consumer
        normal-topic: skeleton_normal
        orderly-consumer-group: skeleton_orderly_consumer
        orderly-topic: skeleton_orderly
rocketmq:
    producer:
        group: skeleton
server:
    forward-headers-strategy: native
    port: 8080
    connectCount: ${SERVER_CONNECT_COUNT:6}
    estimateDiskUsageDays: ${SERVER_ESTIMATE_DISK_USAGE_DAYS:30}
    estimateDiskUsageLogDays: ${SERVER_ESTIMATE_DISK_USAGE_LOG_DAYS:365}
    servlet:
        session:
            timeout: 1200
    compression:
        enabled: true
        min-response-size: 1024
        mime-types: application/json, application/xml, text/html, text/plain, text/xml
spring:
    application:
        name: ${SPRING_APPLICATION_NAME:termius-plus}
    config:
        import: optional:file:.env[.properties]
    datasource:
        password: ${DB_PASSWORD:root}
        url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:termius-plus}?characterEncoding=utf-8
        username: ${DB_USER:root}
    dinger:
        dingers:
            dingtalk:
                secret: ${DINGTALK_SECRET}
                token-id: ${DINGTALK_TOKEN_ID}
        project-id: ${spring.application.name}
    dingtalk:
        enabled: ${DINGTALK_ENABLED:false}
        agent-id: ${DINGTALK_AGENT_ID:}
        client-id: ${DINGTALK_CLIENT_ID:}
        client-secret: ${DINGTALK_CLIENT_SECRET:}
        robot-code: ${DINGTALK_ROBOT_CODE:}
        cool-app-code: ${DINGTALK_COOL_APP_CODE:}
    flyway:
        out-of-order: true
    jpa:
        open-in-view: false
    profiles:
        active: dev
    quartz:
        # 使用数据库存储
        job-store-type: jdbc
        # 初始化完成后自动启动调度程序
        autoStartup: true
        jdbc:
            initialize-schema: EMBEDDED
        properties:
            org:
                quartz:
                    # 调度器配置
                    scheduler:
                        instanceName: Message_Job_Scheduler
                        instanceId: AUTO
                    # 存储配置
                    jobStore:
                        class: org.springframework.scheduling.quartz.LocalDataSourceJobStore
                        driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
                        tablePrefix: QRTZ_
                        isClustered: true
                        misfireThreshold: 12000
                        clusterCheckinInterval: 15000
                        useProperties: false
                        dataSource: ${DB_NAME:education_portal}
                    # 线程池配置
                    threadPool:
                        threadNamePrefix: Message_Job_Pool
                        threadPriority: 30
                        threadCount: 50
                        class: org.quartz.simpl.SimpleThreadPool
                        threadsInheritContextClassLoaderOfInitializingThread: true
    data:
      redis:
        host: ${REDIS_HOST:localhost}
        password: ${REDIS_PASSWORD:}
        port: ${REDIS_PORT:6379}
        timeout: 3000
    servlet:
        multipart:
            enabled: true
            max-file-size: 8000MB
            max-request-size: 8000MB
            resolve-lazily: true
    encrypt:
        enabled: ${ENCRYPT_ENABLE:false}
        request:
            public:
                key: ${ENCRYPT_REQ_PUB_KEY}
            private:
                key: ${ENCRYPT_REQ_PRI_KEY}
        response:
            public:
                key: ${ENCRYPT_RES_PUB_KEY}
            private:
                key: ${ENCRYPT_RES_PRI_KEY}
PortForWarding:
    minPort: ${PORT_FOR_WARDING_MIN:8200}
    maxPort: ${PORT_FOR_WARDING_MAX:8500}

guacamole:
    host: ${GUACAMOLE_HOST:127.0.0.1}
    port: ${GUACAMOLE_PORT:4822}
    mapping: ${GUACAMOLE_MAPPING:/tmp}
#    guacamole服务器的id，把guacamole服务器配置到termius-plus中产生到id
#    用于向windows上传文件使用
    serverId: ${GUACAMOLE_SERVER_ID:1}

monitor:
    enable: ${MONITOR_ENABLE:true}
    count: ${MONITOR_COUNT:1}
    timeout: ${MONITOR_TIMEOUT:30s}
    debounce: ${MONITOR_DEBOUNCE:10}
    certExpiryDays: ${MONITOR_CERT_EXPIRY_DAYS:90}

fitten:
    url: ${FITTEN_URL:www.fitten.com}
deepseek:
    api-key: ${DEEPSEEK_API_KEY:test_deepseek_api_key}

serverInfo:
    timeout: ${SERVER_INFO_TIMEOUT:180s}
    allTimeout: ${SERVER_INFO_ALL_TIMEOUT:300s}

public:
    uri: [/api-admin/public/login]

geo:
    path: ${GEO_PATH:/var/www/GeoLite2-City.mmdb}

map:
    key: ${MAP_KEY:test}
    secret: ${MAP_SECRET:test}